import requests
import json

//Base URL for Mockbin API
base_url = "https://mockbin.org/"

//Sample data for POST and PUT requests
data = {
     "name": "John Doe",
    "email": "john.doe@example.com"
}

//Header 
header = {
     "Content-Type": "application/json"
}

//The assertions can be implemented using a testing framework like Jest or Pytest.
//DELETE Request
//Deletes the respurce with the given ID. Asserts that the status code is 204 indicating successful deletion.
def test_delete_request(bin_id)
url =  f"(base_url)/(bin_id)"
response = requests.delete(url)
print("DELETE request successful")

//POST Request
//Creates a new resource with the give data. Asserts that the status code is 201 and the response contains the expected data. Will return the ID of the created resource for further use.
def test_post_request(): 
response = requests.post(base_url, headers=headers, data=json.dumps(data))
response_data = response.json();
print("POST request successful:", response_data)
return response_data['id']

//GET Request
//Retrieves the resource with the given ID. Asserts that the status code is 200 and the response contains the expected data.
def test_get_request(bin_id):
url =  f"(base_url)/(bin_id)"
response = requests.get(url);
response_data = response.json()
print("GET request successful:", response data)


//PUT Request 
//Updates the resource with the given ID using new data. Asserts that the status code is 200 and the response contains the updated data.
def test_put_request(bin_ id): 
url = f"(base url)/(bin id)" 
updated_data = {
    "name": "Jane Doe"
    "email": "jane.doe@example.com"
}
response = requests.put(url, headers=headers, data=json.dumps(data));
response_data = response.json()
print("PUT request successful:", response_data)
